// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "Rezi Apriliansyah",
            "email": "reziapriliansyah@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/questions": {
            "get": {
                "description": "Get the list of questions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "questions"
                ],
                "summary": "List questions",
                "operationId": "list-questions",
                "parameters": [
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 10,
                        "description": "number of questions in single page",
                        "name": "limit",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Question"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new questions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "questions"
                ],
                "summary": "Create a new questions",
                "operationId": "create-questions",
                "parameters": [
                    {
                        "description": "Create questions",
                        "name": "questions",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Question"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.Question"
                        }
                    }
                }
            }
        },
        "/questions/answer/{id}": {
            "post": {
                "description": "Answer a new questions",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "questions"
                ],
                "summary": "Answer a new questions",
                "operationId": "answer-questions",
                "parameters": [
                    {
                        "description": "Answer questions",
                        "name": "questions",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/datatransfers.Answer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": ""
                    }
                }
            }
        },
        "/questions/{id}": {
            "get": {
                "description": "Get a question by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "questions"
                ],
                "summary": "Get a question by id",
                "operationId": "get-question-id",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "id Question",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Question"
                        }
                    }
                }
            },
            "put": {
                "description": "Update an questions by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "questions"
                ],
                "summary": "Update an questions",
                "operationId": "update-questions",
                "parameters": [
                    {
                        "description": "Update questions",
                        "name": "questions",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Question"
                        }
                    },
                    {
                        "type": "integer",
                        "description": "Question ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Question"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete an questions by id",
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "questions"
                ],
                "summary": "Delete an questions",
                "operationId": "delete-questions",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Question ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "datatransfers.Answer": {
            "type": "object",
            "properties": {
                "questionID": {
                    "type": "integer"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "models.Question": {
            "type": "object",
            "properties": {
                "answer": {
                    "type": "string"
                },
                "created_at": {
                    "type": "integer"
                },
                "deleted_at": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "question": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "integer"
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0.0",
	Host:        "",
	BasePath:    "/v1",
	Schemes:     []string{},
	Title:       "Api Documentation for quiz master",
	Description: "API documentation for quiz master",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
